import cv2
import numpy as np

def detect_lines(image_path, mask):
    gray_image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    
    # Convolução usando a máscara fornecida
    convolved_image = cv2.filter2D(gray_image, -1, mask)
    
    # Encontrar os pixels acima de um limiar
    T = np.max(convolved_image) * 0.7
    detected_lines = (convolved_image > T).astype(np.uint8) * 255
    
    # Exibir as imagens original e detectada lado a lado
    stacked_images = np.hstack((gray_image, detected_lines))
    cv2.imshow("Original vs Linhas detectadas", convolved_image)
    
    key = cv2.waitKey(0)
    if key == 27:
        cv2.destroyAllWindows()
        return False
    
    return True

image_path = "implementacoes\images\lena.pgm"

# Menu de opções
menu_text = """
A. Horizontal
B. Vertical
C. 45 graus
D. 135 graus
S. Sair.
"""

while True:
    print(menu_text)
    
    option = input("Escolha uma opção: ").lower()
    
    if option == 's':
        break
    
    masks = {
        'a': np.array([[-1, -1, -1],
                       [ 2,  2,  2],
                       [-1, -1, -1]]),
        'b': np.array([[-1, 2,  -1],
                       [-1,  2, -1],
                       [ -1, 2, -1]]),
        'c': np.array([[-1,  -1, 2],
                       [-1,  2, -1],
                       [2,  -1, -1]]),
        'd': np.array([[ 2, -1, -1],
                       [-1,  2, -1],
                       [-1, -1,  2]])
    }
    
    # Executar a detecção de linhas com base na opção escolhida
    if option in masks:
        should_continue = detect_lines(image_path, masks[option])
        if not should_continue:
            break
    else:
        print("Opção inválida.")
